import 'dart:convert';
import 'package:http/http.dart' as http;

class AIService {
  static const String _openaiApiUrl = 'https://api.openai.com/v1/chat/completions';
  static const String _deepseekApiUrl = 'https://api.deepseek.com/v1/chat/completions';
  
  static String? _apiKey;
  static String _provider = 'openai'; // 'openai' or 'deepseek'
  
  static void setApiKey(String apiKey) {
    _apiKey = apiKey;
  }
  
  static void setProvider(String provider) {
    _provider = provider;
  }
  
  static String get currentProvider => _provider;
  
  static bool get isConfigured => _apiKey != null && _apiKey!.isNotEmpty;
  
  static Future<String> sendMessage(String message, {List<Map<String, String>>? conversationHistory}) async {
    if (!isConfigured) {
      return 'ูุฑุฌู ุชูููู ููุชุงุญ API ุฃููุงู ูู ุงูุฅุนุฏุงุฏุงุช';
    }
    
    try {
      final String apiUrl = _provider == 'openai' ? _openaiApiUrl : _deepseekApiUrl;
      
      // ุฅุนุฏุงุฏ ุฑุณุงุฆู ุงููุญุงุฏุซุฉ
      List<Map<String, String>> messages = [
        {
          'role': 'system',
          'content': 'ุฃูุช ูุณุงุนุฏ ุฐูู ูุชุฎุตุต ูู ุฑูุงุฏุฉ ุงูุฃุนูุงู ูุงูุงุณุชุดุงุฑุงุช ุงูุชุฌุงุฑูุฉ. ุงุณูู "ููู" ูุฃูุช ุฌุฒุก ูู ุชุทุจูู ููู ูุฑูุงุฏุฉ ุงูุฃุนูุงู. ูุฏู ุฅุฌุงุจุงุช ูููุฏุฉ ูููุตูุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ.'
        }
      ];
      
      // ุฅุถุงูุฉ ุชุงุฑูุฎ ุงููุญุงุฏุซุฉ ุฅู ูุฌุฏ
      if (conversationHistory != null) {
        messages.addAll(conversationHistory);
      }
      
      // ุฅุถุงูุฉ ุงูุฑุณุงูุฉ ุงูุญุงููุฉ
      messages.add({
        'role': 'user',
        'content': message
      });
      
      final response = await http.post(
        Uri.parse(apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $_apiKey',
        },
        body: jsonEncode({
          'model': _provider == 'openai' ? 'gpt-3.5-turbo' : 'deepseek-chat',
          'messages': messages,
          'max_tokens': 1000,
          'temperature': 0.7,
        }),
      );
      
      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return data['choices'][0]['message']['content'];
      } else {
        return 'ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจุฎุฏูุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.';
      }
    } catch (e) {
      return 'ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน. ูุฑุฌู ุงูุชุญูู ูู ุงุชุตุงู ุงูุฅูุชุฑูุช ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.';
    }
  }
  
  static Future<String> getBusinessAdvice(String businessType, String question) async {
    final String prompt = '''
    ุฃูุง ุฃุนูู ูู ูุฌุงู: $businessType
    ุณุคุงูู ูู: $question
    
    ูุฑุฌู ุชูุฏูู ูุตูุญุฉ ููุตูุฉ ููููุฏุฉ ุชุชุนูู ุจุฑูุงุฏุฉ ุงูุฃุนูุงู ูู ูุฐุง ุงููุฌุงู.
    ''';
    
    return await sendMessage(prompt);
  }
  
  static Future<String> analyzeFeasibility(Map<String, dynamic> projectData) async {
    final String prompt = '''
    ุฃุฑูุฏ ุชุญููู ุฌุฏูู ูุดุฑูุน ุจุงููุนูููุงุช ุงูุชุงููุฉ:
    
    ููุน ุงููุดุฑูุน: ${projectData['projectType'] ?? 'ุบูุฑ ูุญุฏุฏ'}
    ุงูููุฒุงููุฉ ุงููุชุงุญุฉ: ${projectData['budget'] ?? 'ุบูุฑ ูุญุฏุฏ'}
    ุงูุณูู ุงููุณุชูุฏู: ${projectData['targetMarket'] ?? 'ุบูุฑ ูุญุฏุฏ'}
    ุงูุฎุจุฑุฉ ุงูุณุงุจูุฉ: ${projectData['experience'] ?? 'ุบูุฑ ูุญุฏุฏ'}
    
    ูุฑุฌู ุชูุฏูู ุชุญููู ุดุงูู ูุฌุฏูู ูุฐุง ุงููุดุฑูุน ูุน ุงูุชุฑููุฒ ุนูู:
    1. ููุงุท ุงูููุฉ ูุงูุถุนู
    2. ุงููุฑุต ูุงูุชุญุฏูุงุช
    3. ุงูุชูุตูุงุช ูุงููุตุงุฆุญ
    4. ุฎุทูุงุช ุงูุจุฏุก ุงูููุชุฑุญุฉ
    ''';
    
    return await sendMessage(prompt);
  }
  
  static Future<String> generateMarketingContent(String businessType, String contentType, String targetAudience) async {
    final String prompt = '''
    ุฃุฑูุฏ ุฅูุดุงุก ูุญุชูู ุชุณูููู ูููุดุฑูุน ุงูุชุงูู:
    
    ููุน ุงููุดุฑูุน: $businessType
    ููุน ุงููุญุชูู ุงููุทููุจ: $contentType
    ุงูุฌูููุฑ ุงููุณุชูุฏู: $targetAudience
    
    ูุฑุฌู ุฅูุดุงุก ูุญุชูู ุชุณูููู ุฌุฐุงุจ ูููุงุณุจ ููุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู.
    ''';
    
    return await sendMessage(prompt);
  }
  
  static Future<String> getFundingAdvice(String businessType, String fundingAmount, String businessStage) async {
    final String prompt = '''
    ุฃุญุชุงุฌ ูุตูุญุฉ ุญูู ุงูุชูููู ูููุดุฑูุน ุงูุชุงูู:
    
    ููุน ุงููุดุฑูุน: $businessType
    ูุจูุบ ุงูุชูููู ุงููุทููุจ: $fundingAmount
    ูุฑุญูุฉ ุงููุดุฑูุน: $businessStage
    
    ูุฑุฌู ุชูุฏูู ูุตุงุฆุญ ุญูู:
    1. ุฃูุถู ูุตุงุฏุฑ ุงูุชูููู ุงูููุงุณุจุฉ
    2. ููููุฉ ุงูุชุญุถูุฑ ูุทูุจ ุงูุชูููู
    3. ุงููุณุชูุฏุงุช ุงููุทููุจุฉ
    4. ูุตุงุฆุญ ูุฒูุงุฏุฉ ูุฑุต ุงูุญุตูู ุนูู ุงูุชูููู
    ''';
    
    return await sendMessage(prompt);
  }
  
  // ุงุณุชุฌุงุจุงุช ุงุญุชูุงุทูุฉ ุนูุฏ ุนุฏู ุชููุฑ ุงูุงุชุตุงู
  static String getOfflineResponse(String message) {
    final String lowerMessage = message.toLowerCase();
    
    if (lowerMessage.contains('ูุฑุญุจุง') || lowerMessage.contains('ุงูุณูุงู') || lowerMessage.contains('ุฃููุง')) {
      return '''
ูุฑุญุจุงู ุจู ูู ููู! ๐

ุฃูุง ูุณุงุนุฏู ุงูุฐูู ูู ุฑุญูุฉ ุฑูุงุฏุฉ ุงูุฃุนูุงู. ูููููู ูุณุงุนุฏุชู ูู:

๐ ุฏุฑุงุณุฉ ุงูุฌุฏูู
๐ ุงูุชุณููู ูุงูุฅุนูุงูุงุช  
๐ฐ ุงูุชูููู ูุงูุงุณุชุซูุงุฑ
๐ ุชุญููู ุงูุณูู
๐ก ุงูุฃููุงุฑ ูุงููุตุงุฆุญ

ููู ูููููู ูุณุงุนุฏุชู ุงููููุ
      ''';
    }
    
    if (lowerMessage.contains('ุฌุฏูู') || lowerMessage.contains('ูุดุฑูุน')) {
      return '''
ุฏุฑุงุณุฉ ุงูุฌุฏูู ุฎุทูุฉ ุฃุณุงุณูุฉ ููุฌุงุญ ุฃู ูุดุฑูุน! ๐

ุงูุนูุงุตุฑ ุงูุฃุณุงุณูุฉ ูุฏุฑุงุณุฉ ุงูุฌุฏูู:
โข ุชุญููู ุงูุณูู ูุงูููุงูุณูู
โข ุงูุฏุฑุงุณุฉ ุงููุงููุฉ ูุงูุชูุงููู
โข ุงูุฏุฑุงุณุฉ ุงูุชูููุฉ ูุงูุชุดุบูููุฉ
โข ุชุญููู ุงููุฎุงุทุฑ
โข ุฎุทุฉ ุงูุชูููุฐ

ููููู ุงุณุชุฎุฏุงู ุฃุฏุงุฉ ุฏุฑุงุณุฉ ุงูุฌุฏูู ูู ุงูุชุทุจูู ููุญุตูู ุนูู ุชุญููู ููุตู!
      ''';
    }
    
    if (lowerMessage.contains('ุชุณููู') || lowerMessage.contains('ุฅุนูุงู')) {
      return '''
ุงูุชุณููู ุงููุนุงู ููุชุงุญ ูุฌุงุญ ุฃู ูุดุฑูุน! ๐ข

ุงุณุชุฑุงุชูุฌูุงุช ุงูุชุณููู ุงูุฃุณุงุณูุฉ:
โข ุชุญุฏูุฏ ุงูุฌูููุฑ ุงููุณุชูุฏู
โข ุฅูุดุงุก ูุญุชูู ุฌุฐุงุจ
โข ุงุณุชุฎุฏุงู ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู
โข ุงูุชุณููู ุงูุฑููู ูุงูุฅุนูุงูุงุช ุงููุฏููุนุฉ
โข ููุงุณ ูุชุญููู ุงููุชุงุฆุฌ

ุงุณุชุฎุฏู ุฃุฏูุงุช ุงูุชุณููู ูู ุงูุชุทุจูู ูุฅูุดุงุก ุญููุงุช ูุงุฌุญุฉ!
      ''';
    }
    
    if (lowerMessage.contains('ุชูููู') || lowerMessage.contains('ุงุณุชุซูุงุฑ')) {
      return '''
ุงูุชูููู ุฎุทูุฉ ุญุงุณูุฉ ูู ุฑุญูุฉ ุฑูุงุฏุฉ ุงูุฃุนูุงู! ๐ฐ

ูุตุงุฏุฑ ุงูุชูููู ุงูุฑุฆูุณูุฉ:
โข ุงูุชูููู ุงูุฐุงุชู
โข ุงููุฑูุถ ุงูุจูููุฉ
โข ุงููุณุชุซูุฑูู ุงูููุงุฆูุฉ
โข ุตูุงุฏูู ุฑุฃุณ ุงููุงู ุงูุฌุฑูุก
โข ุงูุชูููู ุงูุฌูุงุนู
โข ุงูุญุงุถูุงุช ูุงููุณุฑุนุงุช

ุชุตูุญ ูุณู ุงูุชูููู ูู ุงูุชุทุจูู ูุงูุชุดุงู ุงููุฑุต ุงููุชุงุญุฉ!
      ''';
    }
    
    return '''
ุดูุฑุงู ูู ุนูู ุชูุงุตูู ูุนู! ๐ค

ููุฃุณูุ ุฃุญุชุงุฌ ุฅูู ุงุชุตุงู ุจุงูุฅูุชุฑูุช ูุชูุฏูู ุฅุฌุงุจุงุช ููุตูุฉ ููุฎุตุตุฉ.

ูู ูุฐู ุงูุฃุซูุงุกุ ููููู:
โข ุงุณุชูุดุงู ุฃุฏูุงุช ุฏุฑุงุณุฉ ุงูุฌุฏูู
โข ุชุตูุญ ูุณู ุงูุชุณููู ูุงูุฅุนูุงูุงุช
โข ุงูุจุญุซ ุนู ูุฑุต ุงูุชูููู
โข ูุฑุงุฌุนุฉ ุงููุตุงุฆุญ ูุงูุฅุฑุดุงุฏุงุช

ุณุฃููู ููุง ููุณุงุนุฏุชู ุนูุฏ ุนูุฏุฉ ุงูุงุชุตุงู! ๐ช
    ''';
  }
}

